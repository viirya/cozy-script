// Generated by CozyScript 0.1.1
(function() {
  var extend, flatten, _ref;

  exports.starts = function(string, literal, start) {
    return literal === string.substr(start, literal.length);
  };

  exports.ends = function(string, literal, back) {
    var len;
    len = literal.length;
    return literal === string.substr(string.length - len - (back || 0), len);
  };

  exports.compact = function(array) {
    var item, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = array.length; _i < _len; _i++) {
      item = array[_i];
      if (item) {
        _results.push(item);
      }
    }
    return _results;
  };

  exports.count = function(string, substr) {
    var num, pos;
    num = pos = 0;
    if (!substr.length) {
      return 1 / 0;
    }
    while (pos = 1 + string.indexOf(substr, pos)) {
      num++;
    }
    return num;
  };

  exports.merge = function(options, overrides) {
    return extend(extend({}, options), overrides);
  };

  extend = exports.extend = function(object, properties) {
    var key, val;
    for (key in properties) {
      val = properties[key];
      object[key] = val;
    }
    return object;
  };

  exports.flatten = flatten = function(array) {
    var element, flattened, _i, _len;
    flattened = [];
    for (_i = 0, _len = array.length; _i < _len; _i++) {
      element = array[_i];
      if (element instanceof Array) {
        flattened = flattened.concat(flatten(element));
      } else {
        flattened.push(element);
      }
    }
    return flattened;
  };

  exports.del = function(obj, key) {
    var val;
    val = obj[key];
    delete obj[key];
    return val;
  };

  exports.last = function(array, back) {
    return array[array.length - (back || 0) - 1];
  };

  exports.some = (_ref = Array.prototype.some) != null ? _ref : function(fn) {
    var e, _i, _len;
    for (_i = 0, _len = this.length; _i < _len; _i++) {
      e = this[_i];
      if (fn(e)) {
        return true;
      }
    }
    return false;
  };

  exports.prettyErrorMessage = function(error, fileName) {
    var message;
    message = "" + fileName + ": error: " + error.message;
    return message;
  };

  exports.repl = function(opts) {
    var build, major, minor, readline, rl, _ref1;
    if (opts == null) {
      opts = {};
    }
    _ref1 = process.versions.node.split('.').map(function(n) {
      return parseInt(n);
    }), major = _ref1[0], minor = _ref1[1], build = _ref1[2];
    if (major === 0 && minor < 8) {
      console.warn("Node 0.8.0+ required for CozyScript REPL");
      readline = require('readline');
      rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout
      });
      return rl.question("Do you want to run legacy REPL (y/n)?", function(ans) {
        rl.close();
        if (ans === 'y' || ans === 'Y') {
          return require('./repl_legacy');
        } else {
          return process.exit(1);
        }
      });
    } else {
      return require('./repl').start(opts);
    }
  };

}).call(this);
